<?php namespace OpenEMR\Common\Logging{class Logger{private$classContext;private$logFile;public function __construct($classContext="UnknownClassContext"){if(isset($GLOBALS["log_level"])&&$GLOBALS["log_level"]!=="OFF"){$this->classContext=$classContext;$this->determineLogFilePath();}}private function determineLogFilePath(){$fileName=date("Y_m_d")."_application.log";global $webserver_root;$currentDir=$webserver_root;$logDirName='logs';$combinedLogDir=$currentDir.DIRECTORY_SEPARATOR.$logDirName;if(!is_dir($combinedLogDir)){mkdir($combinedLogDir);}if(is_writable($combinedLogDir)){$this->logFile=$combinedLogDir.DIRECTORY_SEPARATOR.$fileName;}else{error_log('Can\'t write application log file to '.$combinedLogDir);}}private function isLogLevelInDesiredHierarchy($level){if(empty($GLOBALS["log_level"])||$GLOBALS["log_level"]==="OFF"){return false;}if($GLOBALS["log_level"]==="TRACE"){return true;}else if($GLOBALS["log_level"]==="DEBUG"&&in_array($level,array("DEBUG","INFO","WARN","ERROR"))){return true;}else if($GLOBALS["log_level"]==="INFO"&&in_array($level,array("INFO","WARN","ERROR"))){return true;}else if($GLOBALS["log_level"]==="WARN"&&in_array($level,array("WARN","ERROR"))){return true;}else if($GLOBALS["log_level"]==="ERROR"&&$level==="ERROR"){return true;}else{return false;}}public function info($message){$this->log($message,"INFO");}public function debug($message){$this->log($message,"DEBUG");}public function trace($message){$this->log($message,"TRACE");}public function warn($message){$this->log($message,"WARN");}public function error($message){$this->log($message,"ERROR");}private function log($message,$type){if($this->isLogLevelInDesiredHierarchy($type)&&!empty($this->logFile)){$logEntry=date("Y-m-d H:i:s")." [".$type."] ".$this->classContext." - ".$message;file_put_contents($this->logFile,$logEntry.PHP_EOL,FILE_APPEND|LOCK_EX);if($type==="ERROR"){error_log($message);}}}}}